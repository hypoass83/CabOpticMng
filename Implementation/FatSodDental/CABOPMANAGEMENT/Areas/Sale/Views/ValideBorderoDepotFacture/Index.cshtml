@using FatSod.Ressources;
@using FatSod.Supply.Entities;
@using FatSod.DataContext.Initializer;
@using CABOPMANAGEMENT.Tools;

@*@model IEnumerable<CABOPMANAGEMENT.Areas.CashRegister.Models.BorderoDepotModel>*@

    @{
        ViewBag.Title = @Resources.ValideBorderoDepotFacture;
        Layout = "~/Views/Shared/_Layout.cshtml";
        var profile = (Session["UserProfile"] == null) ? 0 : (int)Session["UserProfile"];
        var user = (Session["UserID"] == null) ? 0 : (int)Session["UserID"];
        var db = new FatSod.DataContext.Concrete.EFDbContext();
    }

    <div class="row" style="margin-top:5px;margin-left:25px">
    @if (TempData["Message"] != null)
    {
        @Html.Raw(TempData["Message"])
    }
</div>


    <div class="box box-primary box-body" id="SaleValideForm">
        <div class="row">
            <div class="col-md-12">
                <fieldset>
                    <input class="form-control input-sm" id="DisplayForm" type="hidden" value="@ViewBag.DisplayForm">
                    <div class="panel panel-default">
                        <div class="panel-body2">

                            <table class="table" id="mainTable">
                                <thead>
                                    <tr class="dataTableHead">
                                        <th>ID</th>
                                        <th>@Resources.BorderoDepotFacture</th>
                                        <th>@Resources.Assureur</th>
                                        <th>@Resources.LieuxdeDepotBordero</th>
                                        <th>Generated By</th>
                                        <th>Deposit Date</th>
                                        <!--<th>Validated By</th>
                                        <th>Validated Date</th>-->
                                        <th>Action</th>
                                    </tr>
                                </thead>

                            </table>
                        </div>
                    </div>
                </fieldset>
            </div>
        </div>
        <div class="row" style="margin-top:-20px">
            <div class="col-md-12">
                <fieldset class="panel-bodyfielset1">
                    <div class="panel panel-default">
                        <div class="panel-body1">
                            <input class="form-control" id="heureVente" name="heureVente" type="hidden">
                            <input class="form-control" id="CodeBorderoDepot" name="CodeBorderoDepot" type="hidden">
                            <input class="form-control" id="BorderoDepotID" name="BorderoDepotID" type="hidden">

                            <div class="row ipt">
                                <div class="col-sm-2" style="margin-left:1%;">Total Bordero</div>
                                <div class="col-sm-2" style="margin-left:-8%;">
                                    <input class="form-control" id="TotalBordero" name="TotalBordero" type="number" readonly>
                                </div>
                                <div class="col-sm-2">@Resources.Reduction %</div>
                                <div class="col-sm-2" style="margin-left:-5%;">
                                    <input class="form-control" id="TaxReduction" name="TaxReduction" type="number">
                                </div>
                                <div class="col-sm-2">@Resources.DepositInsurance</div>
                                <div class="col-sm-2" style="margin-left:-5%;">
                                    <input class="form-control" id="TotMntValideBordero" name="TotMntValideBordero" type="number" readonly>
                                </div>
                            </div>
                            <div class="row ipt">
                                <div class="col-sm-2" style="margin-left:1%;">@Resources.Diference</div>
                                <div class="col-sm-2" style="margin-left:-8%;">
                                    <input class="form-control" id="TotDifference" name="TotDifference" type="number" readonly>
                                </div>
                                <div class="col-sm-2">
                                    <button type="button" class="btn btn-primary btn-block" id="btnSimulate">@Resources.Simulate</button>
                                </div>
                                
                            </div>
                        </div>
                    </div>
                </fieldset>
            </div>
        </div>

        <div class="row">
            <div class="col-md-12">
                <fieldset>
                    <div class="panel-body2">
                        <table class="table" id="CommandlineTable">
                        <thead>
                            <tr class="dataTableHead">
                                <th style="width: 1%;">
                                    ID
                                </th>
                                <th style="width: 20%;">
                                    @Resources.InssureName
                                </th>
                                <th style="width: 20%;">
                                    @Resources.CustomerPatient
                                </th>
                                <th style="width: 15%;">
                                    @Resources.Company
                                </th>
                                <th style="width: 10%;">
                                    @Resources.UIDateOperation
                                </th>
                                <th style="width: 10%;">
                                    @Resources.BillNumber
                                </th>
                                <th style="width: 10%;">
                                    @Resources.BillAmount
                                </th>
                                <th style="width: 10%;">
                                    @Resources.EffectiveAmount
                                </th>

                            </tr>

                        </thead>


                </table>

                </div>
            </fieldset>
        </div>
            <div class="col-md-12">
                <div class="col-sm-2"></div>
                    <div class="col-sm-2">
                        <button type="button" class="btn btn-primary btn-success" id="btnSubmit">@Resources.ValidateButton</button>
                    </div>
                    <div class="col-sm-4">
                        <div class="row ipt">
                            <div class="col-sm-4" id="labelchoixbank">@Resources.ChoixBank</div>
                            <div class="col-sm-6" id="inputchoixbank">
                                <select class="form-control" id="PaymentMethodID" name="PaymentMethodID"></select>
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-4">
                        <div class="row ipt">
                            <div class="col-sm-4">@Resources.Reference</div>
                            <div class="col-sm-6">
                                <input class="form-control" id="Reference" name="Reference">
                            </div>
                        </div>
                    </div>
                </div>
    </div>
</div>

<!-- Css Begins Here -->

<style>
    .invalid-data {
        border: 1px solid red;
    }

    .valid-data {
        border: 1px solid #ccc;
    }

    .ipt {
        margin-bottom: 6px;
    }

    #img-upload {
        width: 100%;
    }

    /*Adding some css for looks good*/
    span.error {
        display: block;
        visibility: hidden;
        color: red;
        font-size: 90%;
    }

    #after_manual_posting_yes {
        margin-right: 15px;
    }

    fieldset {
        border: 1px solid #ddd !important;
        margin-left: 10px;
        min-width: 0;
        padding: 0px;
        position: relative;
        border-radius: 4px;
        background-color: #99bce8;
        padding-left: 10px !important;
    }

    .panel-body {
        height: 85px;
    }

    .panel-body1 {
        height: 48px;
        margin-top: 2px;
        margin-bottom:2%;
    }

    .panel-body2 {
        height: 215px;
        margin-top: 10px;
        margin-left: 10px;
        margin-right: 10px;
    }

    .panel-body3 {
        height: 75px;
        margin-top: 5px;
        /*margin-left: 15%;*/
    }

    legend {
        font-size: 14px;
        font-weight: bold;
        margin-bottom: 0px;
        width: 70%;
        border: 1px solid #ddd;
        border-radius: 4px;
        padding: 5px 5px 5px 10px;
        background-color: #ffffff;
    }
</style>

<!--********** JavaScripts **********-->
<script>

    function CalculeTaxAndPopulateTable(BorderoDepotID, TaxReduction)
    {
        $('#TotMntValideBordero').val('0');
        $('#TotDifference').val('0');

        $.get('@Url.Action("ProcCalculeTaxAndPopulateTable", "ValideBorderoDepotFacture")', { BorderoDepotID: BorderoDepotID, TaxReduction: TaxReduction }, function (data) {
            $.each(data, function (key, value) {
                $('#TotMntValideBordero').val(value.TotMntValideBordero);
                $('#TotDifference').val(value.TotDifference);
                GetCommandline(true);
                ActivateSubMitButton();
            });
        }, 'json');
    }

    
    function InitialiseHeader() {
        //header
        $('#TotalBordero').val('0');
        $('#TotMntValideBordero').val('0');
        $('#TotDifference').val('0');
        $('#CodeBorderoDepot').val('');
        $('#BorderoDepotID').val('');
    }

    function DeleteItem(obj) {

        if (confirm("Do you want to Cancel this Data ?")) {
            var globalID = obj;
            //post to the server
            $(this).val('Please wait...');
            var data = {
                BorderoDepotID: parseInt(globalID)
            }
            //post data to server
            $.ajax({
                url: '@Url.Action("DeleteCancelBordero", "ValideBorderoDepotFacture")',
                type: "POST",
                data: JSON.stringify(data),
                dataType: "JSON",
                contentType: "application/json",
                success: function (d) {
                    //check is successfully save to database
                    if (d.status == true) {
                        //will send status from server side
                        alert(d.Message);
                        InitialiseHeader();

                        //GetAllCommand(true);
                        //GetCommandline(true);
                        location.reload(true);
                    }
                    else {
                        alert(d.Message);
                    }
                    $('#btnSubmit').val('@Resources.Send');
                },
                error: function (response) {
                    alert('Error. Please try again.');
                    $('#btnSubmit').val('@Resources.Send');
                }
            });
        }
    }

    function UpdateItem(obj) {
        var globalID = obj;
        InitialiseHeader();

        $.get('@Url.Action("InitializeCommandFields", "ValideBorderoDepotFacture")', { ID: globalID }, function (data) {
            $.each(data, function (key, value) {
                $('#TotalBordero').val(value.TotalBordero);
                $('#TotMntValideBordero').val(value.TotMntValideBordero);
                $('#TotDifference').val(value.TotDifference);
                $('#CodeBorderoDepot').val(value.CodeBorderoDepot);
                $('#BorderoDepotID').val(value.BorderoDepotID);
                $('#TaxReduction').val(value.TaxReduction);
                
                GetCommandline(true);
            });
        }, 'json');

    }

    function GetCommandlineAfterTaxCalculate(test) {

        if (test) {
            $('#CommandlineTable').dataTable().fnDestroy();
        }
        var oTable = $('#CommandlineTable');

        oTable = $('#CommandlineTable').DataTable({
            "paging": false,
            "pageLength": 40,
            "lengthMenu": [[40, 80, 120, -1], [40, 80, 120, "All"]],
            "searching": true,
            "ordering": true,
            "pagingType": "full_numbers",
            @*// Ajax call
            "ajax": {
                "url": "@Url.Action("CalculeTaxAndPopulateTable", "ValideBorderoDepotFacture")",
                "type": "GET",
                "datatype": "json",
                "data": { BorderoDepotID: BorderoDepotID, TaxReduction: TaxReduction }
            },*@
            // Ajax call
            "ajax": "@Url.Action("CommandOderLines", "ValideBorderoDepotFacture")",
            "columns": [
                { "data": "CustomerOrderID", "width": "5%" },
                { "data": "AssureurName", "width": "22%" },
                { "data": "CustomerName", "width": "22%" },
                { "data": "CompanyName", "width": "15%" },
                { "data": "CustomerOrderDate", "width": "8%" },
                { "data": "NumeroFacture", "width": "8%" },
                { "data": "Plafond", "width": "10%" },
                { "data": "ValidateAmount", "width": "10%" }
            ]
        });

    }
    //chargement d'une commandes d'un client
    function GetCommandline(test) {

        if (test) {
            $('#CommandlineTable').dataTable().fnDestroy();
        }
        var oTable = $('#CommandlineTable');

        oTable = $('#CommandlineTable').DataTable({
            "paging": false,
            "pageLength": 40,
            "lengthMenu": [[40, 80, 120, -1], [40, 80, 120, "All"]],
            "searching": true,
            "ordering": true,
            "pagingType": "full_numbers",
            // Ajax call
            "ajax": "@Url.Action("CommandOderLines", "ValideBorderoDepotFacture")",

            "columns": [
                { "data": "CustomerOrderID", "width": "5%" },
                { "data": "AssureurName", "width": "22%" },
                { "data": "CustomerName", "width": "22%" },
                { "data": "CompanyName", "width": "15%" },
                { "data": "CustomerOrderDate", "width": "8%" },
                { "data": "NumeroFacture", "width": "8%" },
                { "data": "Plafond", "width": "10%" },
                { "data": "ValidateAmount", "width": "10%", "className": "editable" }
            ]
        });
        $('#CommandlineTable').on('click', 'tbody td.editable', function () {
            if ($(this).attr("contentEditable") == true) {
                $(this).attr("contentEditable", "false");
            } else {
                $(this).attr("contentEditable", "true");
            }
        });
    }
    function getDataTableEltToValidate() {
        var isAllValid = true;
        var table = document.getElementById('CommandlineTable');

        var rowLength = table.rows.length;

        var ValideBorderoItems = [];

        for (var i = 1; i < rowLength; i += 1) {
            var row = table.rows[i];
            var ID = row.cells[0].innerHTML;
            var NumeroFacture = row.cells[5].innerHTML;
            var Plafond = row.cells[6].innerHTML;
            var ValidateAmount = row.cells[7].innerHTML;

            if (isAllValid) {
                ValideBorderoItems.push({
                    ID: ID,
                    ValidateAmount: ValidateAmount,
                    Plafond: Plafond,
                    NumeroFacture: NumeroFacture
                });
            }
        }

        if (ValideBorderoItems.length > 0) {
            ValideBordero(ValideBorderoItems);
        }
    }

    function ValideBordero(input) {
        var isAllValid = true;
        var d = new Date();
        var hourPayment = d.getHours() + ":" + d.getMinutes() + ":" + d.getSeconds();
        $('#heureVente').val(hourPayment);
        var heureVente = $("#heureVente").val();

        if (input.length == 0) {
            isAllValid = false;
            alert('No data to validate');
        }
        else {

            if ($('#PaymentMethodID').val() == "0" || $('#PaymentMethodID').val() == '') {
                isAllValid = false;
                $("#PaymentMethodID").addClass("invalid-data");
            }
            else {
                $("#PaymentMethodID").addClass("valid-data");
            }

            if ($('#Reference').val() == '') {
                isAllValid = false;
                $("#Reference").addClass("invalid-data");
            }
            else {
                $("#Reference").addClass("valid-data");
            }

            if ($('#CodeBorderoDepot').val() == '') {
                isAllValid = false;
                $("#CodeBorderoDepot").addClass("invalid-data");
            }
            else {
                $("#CodeBorderoDepot").addClass("valid-data");
            }

            if ($('#BorderoDepotID').val() == '') {
                isAllValid = false;
                $("#BorderoDepotID").addClass("invalid-data");
            }
            else {
                $("#BorderoDepotID").addClass("valid-data");
            }

            if (isAllValid)
            {
                //var TaxReduction = $("#TaxReduction").val();
                var BorderoDepotID = $("#BorderoDepotID").val();

                var formData = new FormData();
                formData.append("PaymentMethodID", $('#PaymentMethodID').val());
                formData.append("Reference", $('#Reference').val());
                formData.append("HeureVente", heureVente);
                formData.append("BorderoDepotID", BorderoDepotID);
                //formData.append("TaxReduction", TaxReduction);

                $.each(input, function (key, input) {

                    if (input.ValidateAmount == '' || parseFloat(input.ValidateAmount) < 0) {
                        isAllValid = false;
                        alert('@Resources.msgEmptyAmounttoValidate');
                    }
                    input.ValidateAmount = input.ValidateAmount.replace(/[^0-9]/g, '');
                    if (!isNaN(parseFloat(input.ValidateAmount)) && isFinite(input.ValidateAmount)) {

                    }
                    else {
                        isAllValid = false;
                        alert('@Resources.msgNumeric');
                    }
                    if (isAllValid) {
                        formData.append("BorderoItems[" + key + "].ID", input.ID);
                        formData.append("BorderoItems[" + key + "].MntValideBordero", input.ValidateAmount);
                        formData.append("BorderoItems[" + key + "].NumeroFacture", input.NumeroFacture);
                        formData.append("BorderoItems[" + key + "].Plafond", input.Plafond);
                    }

                });
            }


            $(this).val('Please wait...');

            //post data to server
            if (isAllValid && input.length > 0) {
                $.ajax({
                    url: '@Url.Action("ValideBorderoDepot", "ValideBorderoDepotFacture")',
                    type: "POST",
                    data: formData,
                    dataType: "JSON",
                    contentType: false,
                    processData: false,
                    success: function (d) {
                        //check is successfully save to database
                        if (d.status == true) {
                            //will send status from server side
                            alert(d.Message);
                            //reinitialisation des champs
                            location.reload(true);
                        }
                        else {
                            alert(d.Message);
                        }
                    },
                    error: function (response) {
                        alert('Error. Please try again.');
                    }
                });
            }
        }

    }

    function getDataTableElt() {
        var isAllValid = true;
        var table = document.getElementById('CommandlineTable');
        var TotValidateAmount = 0
        var TotalBordero = $('#TotalBordero').val();

        var rowLength = table.rows.length;

        for (var i = 1; i < rowLength; i += 1) {
            var row = table.rows[i];
            var ID = row.cells[0].innerHTML;
            var ValidateAmount = row.cells[7].innerHTML;

            TotValidateAmount = TotValidateAmount + parseFloat(ValidateAmount)
        }

        if (TotValidateAmount > 0) {
            var TotDifference = parseFloat(TotalBordero) - TotValidateAmount;
            $('#TotMntValideBordero').val(TotValidateAmount);
            $('#TotDifference').val(TotDifference);
        }

    }

    function ActivateSubMitButton()
    {
        var TotMntValideBordero = $('#TotMntValideBordero').val();
        if (parseFloat(TotMntValideBordero) > 0) {
            $('#btnSubmit').prop('disabled', false);
        }
    }

    //chargement des commandes a valider
    function GetAllCommand(test) {

        if (test) {
            $('#mainTable').dataTable().fnDestroy();
        }
        var oTable = $('#mainTable');

        oTable = $('#mainTable').dataTable({

            fixedColumns: true,
            "paging": true,
            "pageLength": 3,
            "lengthMenu": [[3, 5, 10, -1], [3, 5, 10, "All"]],
            "searching": true,
            "ordering": true,
            "pagingType": "full_numbers",
            // Ajax call
            "ajax": "@Url.Action("ModelBorderoValidate", "ValideBorderoDepotFacture")",
            "dom": '<"toolbar">frtip',
            "columns": [
                 { "data": "BorderoDepotID" },
                 { "data": "CodeBorderoDepot" },
                 { "data": "AssureurName" },
                { "data": "LieuxdeDepotBordero" },
                { "data": "GeneratedBy" },
                { "data": "DepositDate" },
                //{ "data": "ValidatedBy" },
                //{ "data": "ValidatedDate" },
                 {// this is Actions Column
                     mRender: function (data, type, row) {
                         var updateOption = '@LoadAction.IsMenuActionAble(MenuAction.UPDATE, @profile, CodeValue.CashRegister.ValideBorderoDepotFacture, db)';
                         var T_updateOption = (updateOption == 'False') ? '<a href="#" class="editor_remove" onclick="UpdateItem(' + row.BorderoDepotID + ')"><span class="glyphicon glyphicon-edit"></a>' : '';

                         var printOption = '@LoadAction.IsMenuActionAble(MenuAction.ADD, @profile, CodeValue.CashRegister.ValideBorderoDepotFacture, db)';
                         var showPrint = (printOption == 'False') ? '<a href="@Url.Action("RptBorderoDepot", "ReportsHome", new { area = "", BorderoDepotID = "-1" })" class="editor_remove"><span class="glyphicon glyphicon-print"></span></a>' : '';
                         showPrint = showPrint.replace("-1", row.BorderoDepotID);
                         var Insurance = row.AssureurName.toUpperCase();
                         if (Insurance.includes("ASCOMA")) {
                             showPrint = showPrint.replace("RptBorderoDepot", "RptBorderoDepotAscoma");
                         }

                         var deleteOption = '@LoadAction.IsMenuActionAble(MenuAction.DELETE, @profile, CodeValue.CashRegister.ValideBorderoDepotFacture, db)';
                         var T_deleteOption = (deleteOption == 'False') ? '<a href=# class="editor_remove" onclick="DeleteItem(' + row.BorderoDepotID + ')"><span class="glyphicon glyphicon-trash"></span></a>' : '';

                         return T_updateOption + " | " + showPrint + " | " + T_deleteOption;
                     }
                 }
            ]
        });
        var brefresh = '<a href="#" class="btn btn-primary" style="margin-left:40%;" onclick="RefreshGrid()"><span class="fa fa-refresh"></span></a>'
        $("div.toolbar").html(brefresh);
    }

    function RefreshGrid() {
        clearInitializeCommandFields();
        GetAllCommand(true);
    }

    function clearInitializeCommandFields() {
        $('#CodeBorderoDepot').val('');
        $('#BorderoDepotID').val('');
    }


    $(document).on('ready', function () {
        if ($('#DisplayForm').val().trim() == 0) {
            $("#SaleValideForm").hide();
        }
        else {
            $("#SaleValideForm").show();
        }

        $(function () {
            $(".datepicker").datepicker({
                format: 'yyyy-mm-dd'
            });
        });

        populateBankList();

        $('#btnSubmit').prop('disabled', true);

        GetAllCommand(false);

        GetCommandline(false);

        $('#btnSimulate').on('click', function () {
            var TaxReduction=$('#TaxReduction').val();
            //if (parseFloat(TaxReduction) > 0)
            //{
            var BorderoDepotID= $('#BorderoDepotID').val();
            CalculeTaxAndPopulateTable(BorderoDepotID, TaxReduction);
            //}

            getDataTableElt();

            ActivateSubMitButton();
        });


        $('#btnSubmit').on('click', function () {
            getDataTableEltToValidate();
            $('#btnSubmit').prop('disabled', true);
        });
    });

    // Get the PaymentMethodID List
    function populateBankList() {

        $.get('@Url.Action("PaymentMethods", "ValideBorderoDepotFacture")', {}, function (data) {
            $('#PaymentMethodID').empty();
            $('#PaymentMethodID').append($("<option value='0'>@Resources.Select</option>"));
            $.each(data, function (key, value) {
                $('#PaymentMethodID').append($("<option></option>").val(value.ID).html(value.Name));
            });
        }, 'json');
    }
</script>
